parameters:
  ros_metapackage: 'ros-melodic-desktop'
  pre_build: []

jobs:
- job: Build
  pool:
    vmImage: 'vs2017-win2016'
  timeoutInMinutes: 240
  steps:
  - ${{ parameters.pre_build }}
  - script: |
      choco sources add -n=roswin -s https://roswin.azurewebsites.net/api/v2/ --priority 1
      choco upgrade %ROS_METAPACKAGE% -y
      call "C:\opt\ros\melodic\x64\env.bat" rosdep install --from-paths . --ignore-src -r -y
    env:
      ROS_METAPACKAGE: ${{ parameters.ros_metapackage }}
    displayName: Install prerequisites

  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      call "C:\opt\ros\melodic\x64\env.bat" catkin_init_workspace
      call "C:\opt\ros\melodic\x64\env.bat" catkin_make_isolated --install --source .
      call "C:\opt\ros\melodic\x64\env.bat" catkin_make_isolated --source . --make-args run_tests
    displayName: Build repo

  - task: PublishTestResults@2
    displayName: Publish nosetests results
    inputs:
      testRunner: 'jUnit'
      testResultsFiles: '**\nosetests-*.xml'
      searchFolder: '$(Build.SourcesDirectory)\build_isolated'
    condition: always()

  - task: PublishTestResults@2
    displayName: Publish rostest results
    inputs:
      testRunner: 'jUnit'
      testResultsFiles: '**\rostest-*.xml'
      searchFolder: '$(Build.SourcesDirectory)\build_isolated'
    condition: always()

  - task: PublishTestResults@2
    displayName: Publish gtest results
    inputs:
      testRunner: 'jUnit'
      testResultsFiles: '**\gtest-*.xml'
      searchFolder: '$(Build.SourcesDirectory)\build_isolated'
    condition: always()
